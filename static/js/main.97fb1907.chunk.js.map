{"version":3,"sources":["store/legoState.ts","components/three/controller/ColorPiker.tsx","components/three/controller/EnvironmentSelector.tsx","components/three/controller/SliderStd.tsx","components/three/controller/LegoController.tsx","components/three/LegoModel.tsx","components/three/Lego.tsx","components/three/TCanvas.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["materialState","proxy","current","data","head","color","roughness","metalness","body","arm","hand","foot","ColorPicker","state","snap","useSnapshot","className","sContainer","sPicker","onChange","css","envState","preset","EnvironmentSelector","FormControl","style","width","Typography","gutterBottom","Select","labelId","id","value","event","target","map","i","MenuItem","SliderStd","props","label","range","step","defValue","onChangeHandler","Slider","ValueLabelComponent","aria-label","min","max","newValue","Array","isArray","children","open","Tooltip","enterTouchDelay","placement","title","LegoController","sCtrlContainer","variant","toUpperCase","sCtrl","modelPath","useGLTF","preload","LegoModel","memo","group","useRef","useState","hovered","setHovered","nodes","faceTexture","useTexture","flipY","createMaterial","matData","texture","THREE","useEffect","cursor","document","btoa","ref","dispose","position","rotation","Math","PI","onPointerDown","e","stopPropagation","object","name","onPointerMissed","onPointerOver","onPointerOut","intersections","length","castShadow","receiveShadow","geometry","Head","material","scale","Body","Waist","Crotch","Leg","Arm","Wrist","Hand","Lego","OrbitControls","enablePan","fallback","Environment","background","TCanvas","camera","fov","dpr","shadows","App","theme","createTheme","palette","type","text","primary","colors","grey","main","orange","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97fb1907.chunk.js","sourcesContent":["import { proxy } from 'valtio';\r\n\r\ntype MaterialProxyType = {\r\n\tcurrent: string\r\n\tdata: {\r\n\t\t[matName: string]: {\r\n\t\t\tcolor: string\r\n\t\t\troughness: number\r\n\t\t\tmetalness: number\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const materialState = proxy<MaterialProxyType>({\r\n\tcurrent: '',\r\n\tdata: {\r\n\t\thead: {\r\n\t\t\tcolor: '#cb9607',\r\n\t\t\troughness: 0.3,\r\n\t\t\tmetalness: 0\r\n\t\t},\r\n\t\tbody: {\r\n\t\t\tcolor: '#cb0606',\r\n\t\t\troughness: 0.3,\r\n\t\t\tmetalness: 0\r\n\t\t},\r\n\t\tarm: {\r\n\t\t\tcolor: '#cb0606',\r\n\t\t\troughness: 0.3,\r\n\t\t\tmetalness: 0\r\n\t\t},\r\n\t\thand: {\r\n\t\t\tcolor: '#cb9607',\r\n\t\t\troughness: 0.3,\r\n\t\t\tmetalness: 0\r\n\t\t},\r\n\t\tfoot: {\r\n\t\t\tcolor: '#0c12cc',\r\n\t\t\troughness: 0.3,\r\n\t\t\tmetalness: 0\r\n\t\t}\r\n\t}\r\n})\r\n","import React from 'react';\r\nimport { HexColorPicker } from 'react-colorful';\r\nimport { useSnapshot } from 'valtio';\r\nimport { css } from '@emotion/css';\r\n\r\ntype ProxyType = {\r\n\tcurrent: string\r\n\tdata: {\r\n\t\t[key: string]: {\r\n\t\t\tcolor: string\r\n\t\t}\r\n\t}\r\n}\r\n\r\ntype PropsType = {\r\n\tstate: ProxyType\r\n}\r\n\r\nexport const ColorPicker: React.FC<PropsType> = ({ state }) => {\r\n\tconst snap = useSnapshot(state)\r\n\r\n\tconst onChangeHandler = (color: string) => {\r\n\t\tif (snap.current) {\r\n\t\t\tstate.data[snap.current].color = color\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className={sContainer}>\r\n\t\t\t<HexColorPicker\r\n\t\t\t\tclassName={sPicker}\r\n\t\t\t\tcolor={snap.current ? snap.data[snap.current].color : '#fff'}\r\n\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst sContainer = css`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-items: center;\r\n`\r\n\r\nconst sPicker = css`\r\n\twidth: 100px;\r\n\theight: 100px;\r\n`\r\n","import React from 'react';\r\nimport { proxy, useSnapshot } from 'valtio';\r\nimport { FormControl, MenuItem, Select, Typography } from '@material-ui/core';\r\n\r\ntype PresetType =\r\n\t| 'sunset'\r\n\t| 'dawn'\r\n\t| 'night'\r\n\t| 'warehouse'\r\n\t| 'forest'\r\n\t| 'apartment'\r\n\t| 'studio'\r\n\t| 'city'\r\n\t| 'park'\r\n\t| 'lobby'\r\n\r\nexport const envState = proxy<{ preset: PresetType }>({\r\n\tpreset: 'sunset'\r\n})\r\n\r\nexport const EnvironmentSelector: React.FC = () => {\r\n\tconst snap = useSnapshot(envState)\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n\t\tenvState.preset = event.target.value as PresetType\r\n\t}\r\n\r\n\tconst envPresets: PresetType[] = [\r\n\t\t'sunset',\r\n\t\t'dawn',\r\n\t\t'night',\r\n\t\t'warehouse',\r\n\t\t'forest',\r\n\t\t'apartment',\r\n\t\t'studio',\r\n\t\t'city',\r\n\t\t'park',\r\n\t\t'lobby'\r\n\t]\r\n\r\n\treturn (\r\n\t\t<FormControl style={{ width: '200px' }}>\r\n\t\t\t<Typography gutterBottom color=\"textPrimary\">\r\n\t\t\t\tEnvironment\r\n\t\t\t</Typography>\r\n\t\t\t<Select\r\n\t\t\t\tlabelId=\"environment-select-label\"\r\n\t\t\t\tid=\"environment-select\"\r\n\t\t\t\tvalue={snap.preset}\r\n\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t{envPresets.map((preset, i) => (\r\n\t\t\t\t\t<MenuItem key={i} value={preset}>\r\n\t\t\t\t\t\t{preset}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { Slider, Tooltip, Typography } from '@material-ui/core';\r\n\r\ntype PropsType = {\r\n\tlabel: string\r\n\trange: [number, number]\r\n\tstep: number\r\n\tdefValue: number\r\n\tonChangeHandler: (value: number) => void\r\n}\r\n\r\nexport const SliderStd: React.FC<PropsType> = props => {\r\n\tconst { label, range, step, defValue, onChangeHandler } = props\r\n\r\n\tconst handleSliderChange = (event: any, newValue: number | number[]) => {\r\n\t\tconst value = Array.isArray(newValue) ? newValue[0] : newValue\r\n\t\tonChangeHandler(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography gutterBottom color=\"textPrimary\">\r\n\t\t\t\t{label}\r\n\t\t\t</Typography>\r\n\t\t\t<Slider\r\n\t\t\t\tValueLabelComponent={ValueLabelComponent}\r\n\t\t\t\taria-label=\"custom thumb label\"\r\n\t\t\t\tmin={range[0]}\r\n\t\t\t\tmax={range[1]}\r\n\t\t\t\tstep={step}\r\n\t\t\t\tvalue={defValue}\r\n\t\t\t\tonChange={handleSliderChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\ntype VLCPropsType = {\r\n\tchildren: React.ReactElement\r\n\topen: boolean\r\n\tvalue: number\r\n}\r\n\r\nconst ValueLabelComponent: React.FC<VLCPropsType> = props => {\r\n\tconst { children, open, value } = props\r\n\r\n\treturn (\r\n\t\t<Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n\t\t\t{children}\r\n\t\t</Tooltip>\r\n\t)\r\n}\r\n","import { useSnapshot } from 'valtio';\r\nimport { css } from '@emotion/css';\r\nimport { Typography } from '@material-ui/core';\r\nimport { materialState } from '../../../store/legoState';\r\nimport { ColorPicker } from './ColorPiker';\r\nimport { EnvironmentSelector } from './EnvironmentSelector';\r\nimport { SliderStd } from './SliderStd';\r\n\r\nexport const LegoController: React.FC = () => {\r\n\tconst snap = useSnapshot(materialState)\r\n\r\n\tconst onChangeRoughtnessSlider = (value: number) => {\r\n\t\tif (snap.current) {\r\n\t\t\tmaterialState.data[snap.current].roughness = value\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChangeMetalnessSlider = (value: number) => {\r\n\t\tif (snap.current) {\r\n\t\t\tmaterialState.data[snap.current].metalness = value\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={sCtrlContainer}>\r\n\t\t\t{/* カラー選択 */}\r\n\t\t\t<Typography variant=\"h4\" color=\"textPrimary\">\r\n\t\t\t\t{snap.current ? snap.current.toUpperCase() : 'NO SELECT'}\r\n\t\t\t</Typography>\r\n\t\t\t<div className={sCtrl}>\r\n\t\t\t\t<ColorPicker state={materialState} />\r\n\t\t\t</div>\r\n\t\t\t{/* 粗さ */}\r\n\t\t\t<div className={sCtrl}>\r\n\t\t\t\t<SliderStd\r\n\t\t\t\t\tlabel=\"Roughness\"\r\n\t\t\t\t\trange={[0, 1]}\r\n\t\t\t\t\tstep={0.1}\r\n\t\t\t\t\tdefValue={snap.current ? snap.data[snap.current].roughness : 0}\r\n\t\t\t\t\tonChangeHandler={onChangeRoughtnessSlider}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{/* 光沢 */}\r\n\t\t\t<div className={sCtrl}>\r\n\t\t\t\t<SliderStd\r\n\t\t\t\t\tlabel=\"Metalness\"\r\n\t\t\t\t\trange={[0, 1]}\r\n\t\t\t\t\tstep={0.1}\r\n\t\t\t\t\tdefValue={snap.current ? snap.data[snap.current].metalness : 0}\r\n\t\t\t\t\tonChangeHandler={onChangeMetalnessSlider}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{/* 周辺環境 */}\r\n\t\t\t<div className={sCtrl}>\r\n\t\t\t\t<EnvironmentSelector />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst sCtrlContainer = css`\r\n\tposition: absolute;\r\n\ttop: 15px;\r\n\tleft: 15px;\r\n\tpadding: 20px;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\tborder-radius: 10px;\r\n`\r\n\r\nconst sCtrl = css`\r\n\tmargin-top: 15px;\r\n`\r\n","/*\r\ngltfjsx: https://github.com/pmndrs/gltfjsx\r\ncode example: https://github.com/drcmda/floating-shoe\r\n*/\r\n\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { useSnapshot } from 'valtio';\r\nimport { useGLTF, useTexture } from '@react-three/drei';\r\nimport { ThreeEvent } from '@react-three/fiber';\r\nimport { materialState } from '../../store/legoState';\r\n\r\ntype GLTFResult = GLTF & {\r\n\tnodes: {\r\n\t\tHead: THREE.Mesh\r\n\t\tBody: THREE.Mesh\r\n\t\tWaist: THREE.Mesh\r\n\t\tCrotch: THREE.Mesh\r\n\t\tLeg: THREE.Mesh\r\n\t\tArm: THREE.Mesh\r\n\t\tWrist: THREE.Mesh\r\n\t\tHand: THREE.Mesh\r\n\t}\r\n\tmaterials: {\r\n\t\thead: THREE.MeshStandardMaterial\r\n\t\tbody: THREE.MeshStandardMaterial\r\n\t\tfoot: THREE.MeshStandardMaterial\r\n\t\tarm: THREE.MeshStandardMaterial\r\n\t\twrist: THREE.MeshStandardMaterial\r\n\t}\r\n}\r\n\r\nconst modelPath = './assets/LegoModel.glb'\r\nuseGLTF.preload(modelPath)\r\n\r\nexport const LegoModel: React.FC = memo((props: JSX.IntrinsicElements['group']) => {\r\n\tconst group = useRef<THREE.Group>()\r\n\tconst snap = useSnapshot(materialState)\r\n\tconst [hovered, setHovered] = useState<string>('')\r\n\r\n\t// model load\r\n\tconst { nodes } = useGLTF(modelPath) as GLTFResult\r\n\tconst faceTexture = useTexture('./assets/face.png')\r\n\tfaceTexture.flipY = false\r\n\t// ※ canvasの背景色を指定しないと、textrueを割り当てたmaterialのcolorが反映されない\r\n\r\n\t// material create\r\n\tconst createMaterial = (\r\n\t\tmatData: { color: string; roughness: number; metalness: number },\r\n\t\ttexture?: THREE.Texture\r\n\t) => {\r\n\t\treturn new THREE.MeshStandardMaterial({\r\n\t\t\tcolor: matData.color,\r\n\t\t\troughness: matData.roughness,\r\n\t\t\tmetalness: matData.metalness,\r\n\t\t\tmap: texture ?? null\r\n\t\t})\r\n\t}\r\n\r\n\t// event\r\n\tconst onPointerDowntHandler = (e: ThreeEvent<PointerEvent>) => {\r\n\t\te.stopPropagation()\r\n\t\tmaterialState.current = e.object.name\r\n\t}\r\n\r\n\tconst onPointerMissedHandler = () => {\r\n\t\tmaterialState.current = ''\r\n\t}\r\n\r\n\tconst onPointerOverHandler = (e: ThreeEvent<PointerEvent>) => {\r\n\t\te.stopPropagation()\r\n\t\tsetHovered(e.object.name)\r\n\t}\r\n\r\n\tconst onPointerOutHandler = (e: ThreeEvent<PointerEvent>) => {\r\n\t\te.intersections.length === 0 && setHovered('')\r\n\t}\r\n\r\n\t// cursor\r\n\tuseEffect(() => {\r\n\t\tif (hovered) {\r\n\t\t\tconst cursor = `<svg width=\"64\" height=\"64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0)\"><path fill=\"rgba(255, 255, 255, 0.5)\" d=\"M29.5 54C43.031 54 54 43.031 54 29.5S43.031 5 29.5 5 5 15.969 5 29.5 15.969 54 29.5 54z\" stroke=\"#000\"/><g filter=\"url(#filter0_d)\"><path d=\"M29.5 47C39.165 47 47 39.165 47 29.5S39.165 12 29.5 12 12 19.835 12 29.5 19.835 47 29.5 47z\" fill=\"${snap.data[hovered].color}\"/></g><path d=\"M2 2l11 2.947L4.947 13 2 2z\" fill=\"#000\"/><text fill=\"#000\" style=\"white-space:pre\" font-family=\"Inter var, sans-serif\" font-size=\"10\" letter-spacing=\"-.01em\"><tspan x=\"35\" y=\"63\">${hovered}</tspan></text></g><defs><clipPath id=\"clip0\"><path fill=\"#fff\" d=\"M0 0h64v64H0z\"/></clipPath><filter id=\"filter0_d\" x=\"6\" y=\"8\" width=\"47\" height=\"47\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\"><feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"/><feOffset dy=\"2\"/><feGaussianBlur stdDeviation=\"3\"/><feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0\"/><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/><feBlend in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/></filter></defs></svg>`\r\n\t\t\tdocument.body.style.cursor = `url('data:image/svg+xml;base64,${btoa(cursor)}'), auto`\r\n\t\t} else {\r\n\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t}\r\n\t}, [hovered, snap.data])\r\n\r\n\treturn (\r\n\t\t<group\r\n\t\t\tref={group}\r\n\t\t\t{...props}\r\n\t\t\tdispose={null}\r\n\t\t\tposition={[0, -2, 0]}\r\n\t\t\trotation={[0, Math.PI / 2, 0]}\r\n\t\t\tonPointerDown={onPointerDowntHandler}\r\n\t\t\tonPointerMissed={onPointerMissedHandler}\r\n\t\t\tonPointerOver={onPointerOverHandler}\r\n\t\t\tonPointerOut={onPointerOutHandler}>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"head\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Head.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['head'], faceTexture)}\r\n\t\t\t\tposition={[0, 3.23, 0]}\r\n\t\t\t\tscale={[0.46, 0.4, 0.46]}\r\n\t\t\t/>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"body\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Body.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['body'])}\r\n\t\t\t\tposition={[0, 2.11, 0]}\r\n\t\t\t\tscale={[0.36, 0.63, 0.71]}\r\n\t\t\t/>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"foot\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Waist.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['foot'])}\r\n\t\t\t\tposition={[0, 1.36, 0]}\r\n\t\t\t\tscale={[0.36, 0.16, 0.66]}\r\n\t\t\t/>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"foot\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Crotch.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['foot'])}\r\n\t\t\t\tposition={[0, 1.07, 0]}\r\n\t\t\t\trotation={[Math.PI / 2, 0, 0]}\r\n\t\t\t\tscale={[0.33, 0.07, 0.33]}\r\n\t\t\t/>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"foot\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Leg.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['foot'])}\r\n\t\t\t\tposition={[0, 1.07, 0.12]}\r\n\t\t\t\trotation={[Math.PI / 2, 0, 0]}\r\n\t\t\t\tscale={[0.33, 0.07, 0.33]}\r\n\t\t\t/>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"arm\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Arm.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['arm'])}\r\n\t\t\t\tposition={[0, 2.38, 0.57]}\r\n\t\t\t\trotation={[1.39, 0, 0]}\r\n\t\t\t\tscale={[0.25, 0.25, 0.25]}\r\n\t\t\t/>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"hand\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Wrist.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['hand'])}\r\n\t\t\t\tposition={[0.1, 1.59, 0.89]}\r\n\t\t\t\trotation={[-0.15, 0.05, -0.31]}\r\n\t\t\t\tscale={[0.13, 0.1, 0.14]}\r\n\t\t\t/>\r\n\t\t\t<mesh\r\n\t\t\t\tname=\"hand\"\r\n\t\t\t\tcastShadow\r\n\t\t\t\treceiveShadow\r\n\t\t\t\tgeometry={nodes.Hand.geometry}\r\n\t\t\t\tmaterial={createMaterial(snap.data['hand'])}\r\n\t\t\t\tposition={[0.02, 1.28, 0.94]}\r\n\t\t\t\trotation={[0, 0, -Math.PI / 2]}\r\n\t\t\t\tscale={[0.24, 0.21, 0.24]}\r\n\t\t\t/>\r\n\t\t</group>\r\n\t)\r\n})\r\n","import React, { Suspense, VFC } from 'react';\r\nimport { useSnapshot } from 'valtio';\r\nimport { Environment, OrbitControls } from '@react-three/drei';\r\nimport { envState } from './controller/EnvironmentSelector';\r\nimport { LegoModel } from './LegoModel';\r\n\r\nexport const Lego: VFC = () => {\r\n\tconst snap = useSnapshot(envState)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* カメラ */}\r\n\t\t\t<OrbitControls enablePan={false} />\r\n\r\n\t\t\t{/* オブジェクト */}\r\n\t\t\t<Suspense fallback={null}>\r\n\t\t\t\t<LegoModel />\r\n\t\t\t\t<Environment preset={snap.preset} background={true} />\r\n\t\t\t</Suspense>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { VFC } from 'react';\r\nimport { css } from '@emotion/css';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { LegoController } from './controller/LegoController';\r\nimport { Lego } from './Lego';\r\n\r\nexport const TCanvas: VFC = () => {\r\n\treturn (\r\n\t\t<div className={sContainer}>\r\n\t\t\t<Canvas camera={{ fov: 50, position: [0, 1, 5] }} dpr={[1, 2]} shadows>\r\n\t\t\t\t<Lego />\r\n\t\t\t</Canvas>\r\n\t\t\t<LegoController />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst sContainer = css`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 100vh;\r\n\t/* canvasの背景色を指定しないと、textrueを割り当てたmaterialのcolorが反映されない */\r\n\tbackground-color: rgb(48, 48, 48);\r\n`\r\n","import { VFC } from 'react';\nimport { colors, createTheme, ThemeProvider } from '@material-ui/core';\nimport { TCanvas } from './three/TCanvas';\n\nexport const App: VFC = () => {\n\tconst theme = createTheme({\n\t\tpalette: {\n\t\t\ttype: 'dark',\n\t\t\ttext: {\n\t\t\t\tprimary: colors.grey[300]\n\t\t\t},\n\t\t\tprimary: {\n\t\t\t\tmain: colors.orange[500]\n\t\t\t}\n\t\t}\n\t})\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<TCanvas />\n\t\t</ThemeProvider>\n\t)\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}